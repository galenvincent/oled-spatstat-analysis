dat <- envelope(po, nrank=nrank, savefuns=TRUE)
sims <- as.data.frame(attr(dat, 'simfuns'))
sims[,2:length(sims)] <- sims[,2:length(sims)] - (4/3)*pi*sims[,1]^3
envPlot(sims, ylim = c(-0.4, 0.4))
source('~/Research/oled-spatstat-analysis/morphologies.R')
a <- temp_gb(100000, 0.1, 1, 0.2, rcp.number = 1, toplot = TRUE)
open3d()
library(rg;)
library(rgl)
open3d()
a <- temp_gb(100000, 0.1, 1, 0.2, rcp.number = 1, toplot = TRUE)
# Run K-rrl on each of them
nsim = 8*4
nrank = 1
X = rpoispp3(2160, box3(c(0,1), c(0,1), c(0,1)))
sim = expression(temp_gb(216000, 0.1, rcp.rad = 0.2, rcp.number = 'rand'))
cl <- makePSOCKcluster(detectCores())
clusterEvalQ(cl, library(rapt))
clusterExport(cl, c('X','nrank','sim','temp_lamellar','temp_rods','temp_gb','temp_gyroid'))
pNsim <- rle(cut(seq_len(nsim), length(cl), labels = FALSE))$lengths
env <- parLapply(cl, pNsim, function(n) {
envelope(X, fun=K3est, nsim=n, nrank=nrank, funargs = list('rmax' = 1, nrval = 100, correction = 'translation'),
simulate=sim, savefuns=TRUE, verbose=FALSE)
})
stopCluster(cl)
po <- do.call(pool, c(env, savefuns=TRUE))
dat <- envelope(po, nrank=nrank, savefuns=TRUE)
sims <- as.data.frame(attr(dat, 'simfuns'))
sims[,2:length(sims)] <- sims[,2:length(sims)] - (4/3)*pi*sims[,1]^3
envPlot(sims, ylim = c(-0.4, 0.4))
sim = expression(temp_gb(216000, 0.1, rcp.rad = 0.2, rcp.number = 1))
cl <- makePSOCKcluster(detectCores())
clusterEvalQ(cl, library(rapt))
clusterExport(cl, c('X','nrank','sim','temp_lamellar','temp_rods','temp_gb','temp_gyroid'))
pNsim <- rle(cut(seq_len(nsim), length(cl), labels = FALSE))$lengths
env <- parLapply(cl, pNsim, function(n) {
envelope(X, fun=K3est, nsim=n, nrank=nrank, funargs = list('rmax' = 1, nrval = 100, correction = 'translation'),
simulate=sim, savefuns=TRUE, verbose=FALSE)
})
stopCluster(cl)
po <- do.call(pool, c(env, savefuns=TRUE))
dat <- envelope(po, nrank=nrank, savefuns=TRUE)
sims <- as.data.frame(attr(dat, 'simfuns'))
sims[,2:length(sims)] <- sims[,2:length(sims)] - (4/3)*pi*sims[,1]^3
envPlot(sims, ylim = c(-0.4, 0.4))
source('~/Research/oled-spatstat-analysis/morphologies.R')
library(rapt)
library(parallel)
library(rapt)
library(parallel)
?morph_lamellar
?morph_rods
?morph_gb
?morph_gyroid
morph_gyroid(216000, 0.1, 1, toplot = TRUE)
library(rapt)
library(parallel)
a <- morph_gyroid(216000, 0.1, 1, toplot = TRUE)
# Run K-rrl on each of them
sim <- list('lamellar' = expression(morph_lamellar(216000, 0.1, c(1, 0, 0), 4)),
'rods' = expression(morph_rods(216000, 0.1, 'z', c(3, 3), 'hexagonal',
rcp.path = "C:/Users/galen/Documents/Research/point_patterns/2D/Final")),
'gb' = expression(morph_gb(216000, 0.1, rcp.rad = 0.2,
rcp.path = "C:/Users/galen/Documents/Research/point_patterns/2D/Final",
rcp.number = 'rand')),
'gyroid' = expression(morph_gyroid(216000, 0.1, 1)))
name(sim[[1]])
sim[[1]]
names(sim[[1]])
names(sim)
names(sim)[1]
sim.res <- lapply(sim, function(x){
print('starting...')
nsim = 8*3
nrank = 1
X = rpoispp3(1000, box3(c(0,1), c(0,1), c(0,1))) # unimportant
sim = x
cl <- makePSOCKcluster(detectCores())
clusterEvalQ(cl, library(rapt))
clusterExport(cl, c('X','nrank','sim'))
pNsim <- rle(cut(seq_len(nsim), length(cl), labels = FALSE))$lengths
env <- parLapply(cl, pNsim, function(n) {
envelope(X, fun=K3est, nsim=n, nrank=nrank, funargs = list('rmax' = 1, nrval = 100, correction = 'translation'),
simulate=sim, savefuns=TRUE, verbose=FALSE)
})
stopCluster(cl)
po <- do.call(pool, c(env, savefuns=TRUE))
dat <- envelope(po, nrank=nrank, savefuns=TRUE)
sims <- as.data.frame(attr(dat, 'simfuns'))
sims[,2:length(sims)] <- sims[,2:length(sims)] - (4/3)*pi*sims[,1]^3
print('finished...')
return(sims)
})
x <- sim[[1]]
print('starting...')
nsim <- 8*3
nrank <- 1
X <- rpoispp3(1000, box3(c(0,1), c(0,1), c(0,1))) # unimportant
sim <- x
cl <- makePSOCKcluster(detectCores())
clusterEvalQ(cl, library(rapt))
clusterExport(cl, c('X','nrank','sim'))
pNsim <- rle(cut(seq_len(nsim), length(cl), labels = FALSE))$lengths
env <- parLapply(cl, pNsim, function(n) {
envelope(X, fun=K3est, nsim=n, nrank=nrank, funargs = list('rmax' = 1, nrval = 100, correction = 'translation'),
simulate=sim, savefuns=TRUE, verbose=FALSE)
})
stopCluster(cl)
po <- do.call(pool, c(env, savefuns=TRUE))
dat <- envelope(po, nrank=nrank, savefuns=TRUE)
sims <- as.data.frame(attr(dat, 'simfuns'))
sims[,2:length(sims)] <- sims[,2:length(sims)] - (4/3)*pi*sims[,1]^3
envPlot(sims)
envPlot(sims, ylim = c(-0.15, 0.15))
sim.res <- lapply(sim, function(x){
print('starting...')
nsim <- 8*2
nrank <- 1
X <- rpoispp3(1000, box3(c(0,1), c(0,1), c(0,1))) # unimportant
sim <- x
cl <- makePSOCKcluster(detectCores())
clusterEvalQ(cl, library(rapt))
clusterExport(cl, c('X','nrank','sim'))
pNsim <- rle(cut(seq_len(nsim), length(cl), labels = FALSE))$lengths
env <- parLapply(cl, pNsim, function(n) {
envelope(X, fun=K3est, nsim=n, nrank=nrank, funargs = list('rmax' = 1, nrval = 100, correction = 'translation'),
simulate=sim, savefuns=TRUE, verbose=FALSE)
})
stopCluster(cl)
po <- do.call(pool, c(env, savefuns=TRUE))
dat <- envelope(po, nrank=nrank, savefuns=TRUE)
sims <- as.data.frame(attr(dat, 'simfuns'))
sims[,2:length(sims)] <- sims[,2:length(sims)] - (4/3)*pi*sims[,1]^3
print('finished...')
return(sims)
})
x <- sim[[1]]
x
class(x)
class(expression(morph_lamellar(216000, 0.1, c(1, 0, 0), 4)))
View(sim)
class(sim)
sim <- x
class(sim)
?switch
sim <- list(1, 2, 3, 4)
sim.res <- lapply(sim, function(x){
print('starting...')
nsim <- 8*2
nrank <- 1
X <- rpoispp3(1000, box3(c(0,1), c(0,1), c(0,1))) # unimportant
sim <- switch(x, expression(morph_lamellar(216000, 0.1, c(1, 0, 0), 4)),
expression(morph_rods(216000, 0.1, 'z', c(3, 3), 'hexagonal',
rcp.path = "C:/Users/galen/Documents/Research/point_patterns/2D/Final")),
expression(morph_gb(216000, 0.1, rcp.rad = 0.2,
rcp.path = "C:/Users/galen/Documents/Research/point_patterns/2D/Final",
rcp.number = 'rand')),
expression(morph_gyroid(216000, 0.1, 1)))
cl <- makePSOCKcluster(detectCores())
clusterEvalQ(cl, library(rapt))
clusterExport(cl, c('X','nrank','sim'))
pNsim <- rle(cut(seq_len(nsim), length(cl), labels = FALSE))$lengths
env <- parLapply(cl, pNsim, function(n) {
envelope(X, fun=K3est, nsim=n, nrank=nrank, funargs = list('rmax' = 1, nrval = 100, correction = 'translation'),
simulate=sim, savefuns=TRUE, verbose=FALSE)
})
stopCluster(cl)
po <- do.call(pool, c(env, savefuns=TRUE))
dat <- envelope(po, nrank=nrank, savefuns=TRUE)
sims <- as.data.frame(attr(dat, 'simfuns'))
sims[,2:length(sims)] <- sims[,2:length(sims)] - (4/3)*pi*sims[,1]^3
print('finished...')
return(sims)
})
sim.res <- lapply(sim, function(x){
print('starting...')
nsim <- 8*3
nrank <- 1
X <- rpoispp3(1000, box3(c(0,1), c(0,1), c(0,1))) # unimportant
sim <- switch(x, expression(morph_lamellar(216000, 0.1, c(1, 0, 0), 4)),
expression(morph_rods(216000, 0.1, 'z', c(3, 3), 'hexagonal',
rcp.path = "C:/Users/galen/Documents/Research/point_patterns/2D/Final")),
expression(morph_gb(216000, 0.1, rcp.rad = 0.2,
rcp.path = "C:/Users/galen/Documents/Research/point_patterns/2D/Final",
rcp.number = 'rand')),
expression(morph_gyroid(216000, 0.1, 1)))
cl <- makePSOCKcluster(detectCores())
clusterEvalQ(cl, library(rapt))
clusterExport(cl, c('X','nrank','sim'))
pNsim <- rle(cut(seq_len(nsim), length(cl), labels = FALSE))$lengths
env <- parLapply(cl, pNsim, function(n) {
envelope(X, fun=K3est, nsim=n, nrank=nrank, funargs = list('rmax' = 1, nrval = 100, correction = 'translation'),
simulate=sim, savefuns=TRUE, verbose=FALSE)
})
stopCluster(cl)
po <- do.call(pool, c(env, savefuns=TRUE))
dat <- envelope(po, nrank=nrank, savefuns=TRUE)
sims <- as.data.frame(attr(dat, 'simfuns'))
sims[,2:length(sims)] <- sims[,2:length(sims)] - (4/3)*pi*sims[,1]^3
print('finished...')
return(sims)
})
?morph_gb
sim <- list(3, 4)
sim.res <- lapply(sim, function(x){
print('starting...')
nsim <- 8*3
nrank <- 1
X <- rpoispp3(1000, box3(c(0,1), c(0,1), c(0,1))) # unimportant
sim <- switch(x, expression(morph_lamellar(216000, 0.1, c(1, 0, 0), 4)),
expression(morph_rods(216000, 0.1, 'z', c(3, 3), 'hexagonal',
rcp.path = "C:/Users/galen/Documents/Research/point_patterns/2D/Final")),
expression(morph_gb(216000, 0.1, rcp.rad = 0.2,
rcp.path = "C:/Users/galen/Documents/Research/point_patterns/Final",
rcp.number = 'rand')),
expression(morph_gyroid(216000, 0.1, 1)))
cl <- makePSOCKcluster(detectCores())
clusterEvalQ(cl, library(rapt))
clusterExport(cl, c('X','nrank','sim'))
pNsim <- rle(cut(seq_len(nsim), length(cl), labels = FALSE))$lengths
env <- parLapply(cl, pNsim, function(n) {
envelope(X, fun=K3est, nsim=n, nrank=nrank, funargs = list('rmax' = 1, nrval = 100, correction = 'translation'),
simulate=sim, savefuns=TRUE, verbose=FALSE)
})
stopCluster(cl)
po <- do.call(pool, c(env, savefuns=TRUE))
dat <- envelope(po, nrank=nrank, savefuns=TRUE)
sims <- as.data.frame(attr(dat, 'simfuns'))
sims[,2:length(sims)] <- sims[,2:length(sims)] - (4/3)*pi*sims[,1]^3
print('finished...')
return(sims)
})
rm(list = ls())
gc()
library(rapt)
library(parallel)
# Run K-rrl on each of them
sim <- list(1, 2, 3, 4)
sim.res <- lapply(sim, function(x){
print('starting...')
nsim <- 8*3
nrank <- 1
X <- rpoispp3(1000, box3(c(0,1), c(0,1), c(0,1))) # unimportant
sim <- switch(x, expression(morph_lamellar(216000, 0.1, c(1, 0, 0), 4)),
expression(morph_rods(216000, 0.1, 'z', c(3, 3), 'hexagonal',
rcp.path = "C:/Users/galen/Documents/Research/point_patterns/2D/Final")),
expression(morph_gb(216000, 0.1, rcp.rad = 0.2,
rcp.path = "C:/Users/galen/Documents/Research/point_patterns/Final",
rcp.number = 'rand')),
expression(morph_gyroid(216000, 0.1, 1)))
cl <- makePSOCKcluster(detectCores())
clusterEvalQ(cl, library(rapt))
clusterExport(cl, c('X','nrank','sim'))
pNsim <- rle(cut(seq_len(nsim), length(cl), labels = FALSE))$lengths
env <- parLapply(cl, pNsim, function(n) {
envelope(X, fun=K3est, nsim=n, nrank=nrank, funargs = list('rmax' = 1, nrval = 200, correction = 'translation'),
simulate=sim, savefuns=TRUE, verbose=FALSE)
})
stopCluster(cl)
po <- do.call(pool, c(env, savefuns=TRUE))
dat <- envelope(po, nrank=nrank, savefuns=TRUE)
sims <- as.data.frame(attr(dat, 'simfuns'))
sims[,2:length(sims)] <- sims[,2:length(sims)] - (4/3)*pi*sims[,1]^3
print('finished...')
return(sims)
})
x <- 1
print('starting...')
nsim <- 8*3
nrank <- 1
X <- rpoispp3(1000, box3(c(0,1), c(0,1), c(0,1))) # unimportant
sim <- switch(x, expression(morph_lamellar(216000, 0.1, c(1, 0, 0), 4)),
expression(morph_rods(216000, 0.1, 'z', c(3, 3), 'hexagonal',
rcp.path = "C:/Users/galen/Documents/Research/point_patterns/2D/Final")),
expression(morph_gb(216000, 0.1, rcp.rad = 0.2,
rcp.path = "C:/Users/galen/Documents/Research/point_patterns/Final",
rcp.number = 'rand')),
expression(morph_gyroid(216000, 0.1, 1)))
cl <- makePSOCKcluster(detectCores())
clusterEvalQ(cl, library(rapt))
clusterExport(cl, c('X','nrank','sim'))
rm(list = ls())
gc()
library(rapt)
library(parallel)
# Run K-rrl on each of them
sim <- list(1, 2, 3, 4)
sim.res <- lapply(sim, function(x){
print('starting...')
nsim <- 8*3
nrank <- 1
sim <- switch(x, expression(morph_lamellar(216000, 0.1, c(1, 0, 0), 4)),
expression(morph_rods(216000, 0.1, 'z', c(3, 3), 'hexagonal',
rcp.path = "C:/Users/galen/Documents/Research/point_patterns/2D/Final")),
expression(morph_gb(216000, 0.1, rcp.rad = 0.2,
rcp.path = "C:/Users/galen/Documents/Research/point_patterns/Final",
rcp.number = 'rand')),
expression(morph_gyroid(216000, 0.1, 1)))
cl <- makePSOCKcluster(detectCores())
clusterEvalQ(cl, library(rapt))
X <- rpoispp3(1000, box3(c(0,1), c(0,1), c(0,1))) # unimportant
clusterExport(cl, c('X','nrank','sim'))
pNsim <- rle(cut(seq_len(nsim), length(cl), labels = FALSE))$lengths
env <- parLapply(cl, pNsim, function(n) {
envelope(X, fun=K3est, nsim=n, nrank=nrank, funargs = list('rmax' = 1, nrval = 200, correction = 'translation'),
simulate=sim, savefuns=TRUE, verbose=FALSE)
})
stopCluster(cl)
po <- do.call(pool, c(env, savefuns=TRUE))
dat <- envelope(po, nrank=nrank, savefuns=TRUE)
sims <- as.data.frame(attr(dat, 'simfuns'))
sims[,2:length(sims)] <- sims[,2:length(sims)] - (4/3)*pi*sims[,1]^3
print('finished...')
return(sims)
})
clusterExport(cl, c('X','nrank','sim'), envir = environment())
rm(list = ls())
# Run K-rrl on each of them
sim <- list(1, 2, 3, 4)
sim.res <- lapply(sim, function(x){
print('starting...')
nsim <- 8*3
nrank <- 1
sim <- switch(x, expression(morph_lamellar(216000, 0.1, c(1, 0, 0), 4)),
expression(morph_rods(216000, 0.1, 'z', c(3, 3), 'hexagonal',
rcp.path = "C:/Users/galen/Documents/Research/point_patterns/2D/Final")),
expression(morph_gb(216000, 0.1, rcp.rad = 0.2,
rcp.path = "C:/Users/galen/Documents/Research/point_patterns/Final",
rcp.number = 'rand')),
expression(morph_gyroid(216000, 0.1, 1)))
cl <- makePSOCKcluster(detectCores())
clusterEvalQ(cl, library(rapt))
X <- rpoispp3(1000, box3(c(0,1), c(0,1), c(0,1))) # unimportant
clusterExport(cl, c('X','nrank','sim'), envir = environment())
pNsim <- rle(cut(seq_len(nsim), length(cl), labels = FALSE))$lengths
env <- parLapply(cl, pNsim, function(n) {
envelope(X, fun=K3est, nsim=n, nrank=nrank, funargs = list('rmax' = 1, nrval = 200, correction = 'translation'),
simulate=sim, savefuns=TRUE, verbose=FALSE)
})
stopCluster(cl)
po <- do.call(pool, c(env, savefuns=TRUE))
dat <- envelope(po, nrank=nrank, savefuns=TRUE)
sims <- as.data.frame(attr(dat, 'simfuns'))
sims[,2:length(sims)] <- sims[,2:length(sims)] - (4/3)*pi*sims[,1]^3
print('finished...')
return(sims)
})
stopCluster(cl)
2000/3
667*2
1334/60
2000/28
71/3
library(data.table)
library(rapt)
morph <- fread('C:/Users/galen/Desktop/morphology_0.txt', skip = 12 ,col.names = c('x', 'y', 'z', 'mark'))
morph.box <- box3(c(0, 60), c(0, 60), c(0, 60))
morph.pp3 <- pp3(morph$x, morph$y, morph$z, morph.box, marks = morph$mark)
morph.pp3.1 <- morph.pp3[marks(morph.pp3)==1]
morph.pp3.2 <- morph.pp3[marks(morph.pp3)==2]
plot3d.pp3(morph.pp3.1, col = 'blue')
morph_lamellar(216000, 0.1, c(1, 0, 0), 4, toplot = TRUE)
morph_rods(216000, 0.1, 'z', c(3, 3), 'hexagonal',
rcp.path = "C:/Users/galen/Documents/Research/point_patterns/2D/Final", toplot = TRUE)
morph_rods(216000, 0.1, 'z', c(3, 3), 'hexagonal',
rcp.path = "C:/Users/galen/Documents/Research/point_patterns/2D/Final", toplot = TRUE)
expression(morph_gb(216000, 0.1, rcp.rad = 0.2,
rcp.path = "C:/Users/galen/Documents/Research/point_patterns/Final",
rcp.number = 'rand', toplot = TRUE)
)
morph_gb(216000, 0.1, rcp.rad = 0.2,
+                     rcp.path = "C:/Users/galen/Documents/Research/point_patterns/Final",
+                     rcp.number = 'rand', toplot = TRUE)
morph_gb(216000, 0.1, rcp.rad = 0.2,
rcp.path = "C:/Users/galen/Documents/Research/point_patterns/Final",
rcp.number = 'rand', toplot = TRUE)
morph_gb(216000, 0.1, rcp.rad = 0.2,
rcp.path = "C:/Users/galen/Documents/Research/point_patterns/Final",
rcp.number = 'rand', toplot = TRUE)
source('~/Research/oled-spatstat-analysis/morphologies.R')
morph_gb(216000, 0.1, rcp.rad = 0.2,
rcp.path = "C:/Users/galen/Documents/Research/point_patterns/Final",
rcp.number = 'rand', toplot = TRUE)
offset <- c(runif(1, -1, 1), runif(1, -1, 1), runif(1, -1, 1))
offset <- c(runif(1, -1, 1), runif(1, -1, 1), runif(1, -1, 1))
offset <- c(runif(1, -1, 1), runif(1, -1, 1), runif(1, -1, 1))
win.select <- box3(c(xmu - xdist/2 - rcp.rad - 1 + offset[1], xmu + xdist/2 + rcp.rad) + 1 + offset[1],
c(ymu - ydist/2 - rcp.rad - 1 + offset[2], ymu + ydist/2 + rcp.rad) + 1 + offset[2],
c(zmu - zdist/2 - rcp.rad - 1 + offset[3], zmu + zdist/2 + rcp.rad) + 1 + offset[3])
win.select
rcp$domain
offset <- c(runif(1, -1, 1), runif(1, -1, 1), runif(1, -1, 1))
offset <- c(runif(1, -1, 1), runif(1, -1, 1), runif(1, -1, 1))
win.select <- box3(c(xmu - xdist/2 - rcp.rad - 1 + offset[1], xmu + xdist/2 + rcp.rad) + 1 + offset[1],
c(ymu - ydist/2 - rcp.rad - 1 + offset[2], ymu + ydist/2 + rcp.rad) + 1 + offset[2],
c(zmu - zdist/2 - rcp.rad - 1 + offset[3], zmu + zdist/2 + rcp.rad) + 1 + offset[3])
win.select
xmu - xdist/2
xdist
xmu - xdist/2 - rcp.rad
rcp.rad
xmu - xdist/2 - rcp.rad - 1 + offset[1]
win.select <- box3(c(xmu - xdist/2 - rcp.rad - 1 + offset[1], xmu + xdist/2 + rcp.rad) + 1 + offset[1],
c(ymu - ydist/2 - rcp.rad - 1 + offset[2], ymu + ydist/2 + rcp.rad) + 1 + offset[2],
c(zmu - zdist/2 - rcp.rad - 1 + offset[3], zmu + zdist/2 + rcp.rad) + 1 + offset[3])
rcp.xyz <- coords(rcp[inside.boxx(rcp, w = win.select)])
rcp.xyz$x <- rcp.xyz$x - xmu + xdist/2 - offset[1]
rcp.xyz$y <- rcp.xyz$y - ymu + ydist/2 - offset[2]
rcp.xyz$z <- rcp.xyz$z - zmu + zdist/2 - offset[3]
rcp.cut <- pp3(rcp.xyz$x, rcp.xyz$y, rcp.xyz$z,
c(min(rcp.xyz$x), max(rcp.xyz$x)),
c(min(rcp.xyz$y), max(rcp.xyz$y)),
c(min(rcp.xyz$z), max(rcp.xyz$z)))
plot(rcp.cut)
plot3d.pp3(rcp.cut)
win.select
ymu - ydist/2 - rcp.rad
xmu - xdist/2 - rcp.rad
diff(win.select$xrange)
diff(win.select$yrange)
diff(win.select$zrange)
xmu
ymu
xdist
ydist
zdist
ymu - ydist/2 - rcp.rad - 1
win.select <- box3(c(xmu - xdist/2 - rcp.rad - 1 + offset[1], xmu + xdist/2 + rcp.rad + 1 + offset[1]),
c(ymu - ydist/2 - rcp.rad - 1 + offset[2], ymu + ydist/2 + rcp.rad + 1 + offset[2]),
c(zmu - zdist/2 - rcp.rad - 1 + offset[3], zmu + zdist/2 + rcp.rad + 1 + offset[3]))
win.select
rcp.xyz <- coords(rcp[inside.boxx(rcp, w = win.select)])
rcp.xyz$x <- rcp.xyz$x - xmu + xdist/2 - offset[1]
rcp.xyz$y <- rcp.xyz$y - ymu + ydist/2 - offset[2]
rcp.xyz$z <- rcp.xyz$z - zmu + zdist/2 - offset[3]
rcp.cut <- pp3(rcp.xyz$x, rcp.xyz$y, rcp.xyz$z,
c(min(rcp.xyz$x), max(rcp.xyz$x)),
c(min(rcp.xyz$y), max(rcp.xyz$y)),
c(min(rcp.xyz$z), max(rcp.xyz$z)))
plot3d.pp3(rcp.cut)
nnc <- nncross(bgnd, rcp.cut, k = 1:2)
diff <- abs(nnc$dist.1 - nnc$dist.2)
nkeep <- round(frac*npoints(bgnd))
gbwhich <- order(diff)[1:nkeep]
total.inds <- gbwhich
p.selected <- bgnd[total.inds]
plot3d.pp3(p.selected, col = 'red')
library(rapt)
library(parallel)
morph_gb(216000, 0.1, rcp.rad = 0.2,
rcp.path = "C:/Users/galen/Documents/Research/point_patterns/Final",
rcp.number = 'rand', toplot = TRUE)
morph_gyroid(216000, 0.1, 1, toplot = TRUE)
# From HPC
load('sim.res.RData')
lamellar.res <- sim.res$lamellar
rod.res <- sim.res$rods
gyroid.res <- sim.res$gyroid
save(lamellar.res, file = 'lamellar.res.RData')
save(rod.res, file = 'rod.res.RData')
save(gyroid.res, file = 'gyroid.res.RData')
load('rod.res.RData')
rm(list = ls())
# From HPC
load('lamellar.res.RData')
load('rod.res.RData')
load('gyroid.res.RData')
length(gyroid.res)
ncol(gyroid.res)
gyroid.res[,2:ncol(gyroid.res)] <- gyroid.res[,2:ncol(gyroid.res)] + (4/3)*pi*gyroid.res[,1]^3
gyroid.res[,2:ncol(gyroid.res)] <- sqrt(gyroid.res[,2:ncol(gyroid.res)]) -  sqrt((4/3)*pi*gyroid.res[,1]^3)
envPlot(gyroid.res)
envPlot(gyroid.res, ylim = c(-0.15, 0.15))
gyroid.res.n <- gyroid.res
rm(gyroid.res)
load('gyroid.res.RData')
envPlot(gyroid.res, ylim = c(-0.15, 0.15))
rm(gyroid.res)
gyroid.res <- gyroid.res.n
save(gyroid.res, file = 'gyroid.res.RData')
rod.res[,2:ncol(rod.res)] <- rod.res[,2:ncol(rod.res)] + (4/3)*pi*rod.res[,1]^3
rod.res[,2:ncol(rod.res)] <- sqrt(rod.res[,2:ncol(rod.res)]) -  sqrt((4/3)*pi*rod.res[,1]^3)
save(rod.res, file = 'gyroid.res.RData')
save(gyroid.res, file = 'gyroid.res.RData')
save(rod.res, file = 'rod.res.RData')
lamellar.res[,2:ncol(lamellar.res)] <- lamellar.res[,2:ncol(lamellar.res)] + (4/3)*pi*lamellar.res[,1]^3
lamellar.res[,2:ncol(lamellar.res)] <- sqrt(lamellar.res[,2:ncol(lamellar.res)]) -  sqrt((4/3)*pi*lamellar.res[,1]^3)
save(lamellar.res, file = 'lamellar.res.RData')
rm(list = ls())
# From HPC
load('lamellar.res.RData')
load('gyroid.res.RData')
load('rod.res.RData')
envPlot(lamellar.res, ylim = c(-0.15, 0.15))
envPlot(rod.res, ylim = c(-0.15, 0.15))
envPlot(gyroid.res, ylim = c(-0.15, 0.15))
a <- martix(1:10, nrow = 2)
a <- matrix(1:10, nrow = 2)
a
b <- c(1, 1)
a + b
envPlot(lamellar.res, ylim = c(-0.15, 0.15))
morph <- fread('C:/Users/galen/Desktop/morphology_0.txt', skip = 12 ,col.names = c('x', 'y', 'z', 'mark'))
library(data.table)
library(rapt)
morph <- fread('C:/Users/galen/Desktop/morphology_0.txt', skip = 12 ,col.names = c('x', 'y', 'z', 'mark'))
morph.box <- box3(c(0, 60), c(0, 60), c(0, 60))
morph.pp3 <- pp3(morph$x, morph$y, morph$z, morph.box, marks = morph$mark)
morph.pp3.1 <- morph.pp3[marks(morph.pp3)==1]
morph.pp3.2 <- morph.pp3[marks(morph.pp3)==2]
plot3d.pp3(morph.pp3.1, col = 'blue')
plot3d.pp3(morph.pp3.2, col = 'red', add = TRUE)
